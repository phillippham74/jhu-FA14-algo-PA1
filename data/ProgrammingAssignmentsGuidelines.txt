sfdasdf
Typically, the programming assignments will be designed where you will implement one or two algorithms and compare their performance on data sets of your choosing. For these assignments, you are required to submit source code, trace runs that demonstrate proper functioning of the code (including inputs, outputs, and intermediate results demonstrating proper functioning), and a brief description of your conclusions. These programs will replace one of the individual problems in the homework assignment for the week in which it is assigned. To facilitate the grading of programming assignments, the following additional requirements must be followed:
Some versions of the CLRS textbook come with a CD containing Java code for all of the algorithms in the text. Unless otherwise specified, students are not permitted to use this CD to complete programming assignments.
All source code and supporting materials (described below) shall be submitted as part of the assignment when your homework assignment is submitted. A separate file containing all of the elements for the programming assignment will be uploaded in addition to the file containing the answers to the homework problems.
The source code and supporting materials shall be zipped into an archive file where the name of that archive file will be <lastname><assignment#>.zip or <lastname><assignment#>.tar.gz (or whatever is appropriate to your compression software). The "#" should be replaced with the number of the assignment.
All source code must be fully commented. It is common practice to use JavaDoc-type comments at the start of a method that explains what the method is doing. In addition, the code should use method and function names that are "self-documenting." For example, use "index" rather than "i" or "data[ ]" rather than "a[ ]".
When writing your programs, you need to instrument them in a way that the code produces a trace of the important points of its execution. Each student is free to include a switch in the code to permit the trace to be turned on or off, but you are required to submit a file containing the trace run(s) with your program. We will not run your code, so do not expect us to exercise that switch.
Sample test results are required of all programming assignments. The results of each test run should appear in a text file (ASCII) with three sections:
inputs o trace
outputs
Note that the trace log is extremely important and required of all submitted programming assignments in addition to any specific output requirements. Given the diversity of locations for the students in the class, there is no way to guarantee we would be able to run your programs (especially given the freedom to use any language). Thus the trace log must provide sufficient information to verify the functionality of your program.
It is not necessary for the trace log to use large data sets since they serve only to demonstrate proper functioning of the program. Therefore, feel free to provide the trace logs on small data sets. Note, however, that failure to provide the required trace logs will result in up to 50% penalty on the programming assignment.
Many of the programming assignments will involve assessing the time and space complexity of your implementations empirically. You are not permitted to use measures outside of your control, such as CPU time, wall clock time, heap size, etc. Rather, you must estimate the time or space complexity using controllable measures such as number of comparisons executed, number of function calls, actual space allocated, etc. Failure to use such controllable measures will result in substantial penalty (up to 25%).
